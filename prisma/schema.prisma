datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  USER
  ADMIN
}

enum Gender {
  FEMININO
  MASCULINO
}

enum GravidadeTEA {
  LEVE
  MODERADA
  GRAVE
}

enum SubtipoTEA {
  AUTISMO_CLASSICO
  SINDROME_ASPERGER
  TRANSTORNO_DESINTEGRATIVO_DA_INFANCIA
  TRANSTORNO_DESENVOLVIMENTO_NAO_ESPECIFICADO
}

enum TipoRelatorio {
  ACOMPANHAMENTO_DIARIO
  TRATAMENTO
  COMPORTAMENTO
  NUTRICAO
  ATIVIDADES_FISICAS
  SONO
  EVENTOS_ESPECIFICOS
  COMUNICACAO
  EDUCACAO
  COMUNICACAO_FAMILIAR
  OUTROS
}

model Usuario {
  id             String      @id @default(uuid())
  criadoEm       DateTime    @default(now())
  atualizadoEm   DateTime    @updatedAt
  deletadoEm     DateTime?
  email          String      @unique
  senha          String
  nome           String
  telefone       String
  cpf            String      @unique
  rg             String      @unique
  dataNascimento DateTime?   @db.Date
  logradouro     String
  cidade         String
  bairro         String
  uf             String
  username       String      @unique
  imagemUrl      String?
  gender         Gender      @default(FEMININO)
  role           Role        @default(USER)
  Paciente       Paciente?   @relation(fields: [pacienteId], references: [id])
  pacienteId     String?
  Relatorio      Relatorio[]

  @@map("usuario")
}

model Paciente {
  id             String        @id @default(uuid())
  criadoEm       DateTime      @default(now())
  atualizadoEm   DateTime      @updatedAt
  deletadoEm     DateTime?
  dataNascimento DateTime?     @db.Date
  nome           String
  documento      String        @unique
  diagnostico    Diagnostico[]

  Usuario   Usuario[]
  Relatorio Relatorio[]

  @@map("paciente")
}

model Diagnostico {
  id              String       @id @default(uuid())
  criadoEm        DateTime     @default(now())
  atualizadoEm    DateTime     @updatedAt
  deletadoEm      DateTime?
  dataDiagnostico DateTime
  tratamento      String?
  subtipoTEA      SubtipoTEA
  gravidadeTEA    GravidadeTEA

  Paciente   Paciente? @relation(fields: [pacienteId], references: [id])
  pacienteId String?

  @@map("diagnostico")
}

model Relatorio {
  id               String        @id @default(uuid())
  criadoEm         DateTime      @default(now())
  atualizadoEm     DateTime      @updatedAt
  deletadoEm       DateTime?
  tipo             TipoRelatorio
  descricao        String
  acoesNecessarias String?
  outrasAnotacoes  String?
  pacienteId       String
  usuarioId        String
  Paciente         Paciente      @relation(fields: [pacienteId], references: [id])
  Usuario          Usuario       @relation(fields: [usuarioId], references: [id])

  @@map("relatorio")
}

// model Rotina {
//   id           String       @id @default(uuid())
//   criadoEm     DateTime     @default(now())
//   atualizadoEm DateTime     @updatedAt
//   nome         String
//   descricao    String?
//   pacienteId   String
//   usuarioId    String
//   usuario      Usuario      @relation(fields: [usuarioId], references: [id])
//   paciente     Paciente     @relation(fields: [pacienteId], references: [id])
//   itens        ItemRotina[]

//   @@map("rotina")
// }

// model ItemRotina {
//   id           String   @id @default(uuid())
//   criadoEm     DateTime @default(now())
//   atualizadoEm DateTime @updatedAt
//   rotina       Rotina   @relation(fields: [rotinaId], references: [id])
//   rotinaId     String
//   hora         DateTime
//   descricao    String

//   @@map("item_rotina")
// }
